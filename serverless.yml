service: varys

provider:
  name: aws
  runtime: nodejs20.x
  stage: prod
  region: ap-south-1
  apiName: ${self:service}
  memorySize: 128 # MB
  timeout: 10 # Seconds
  environment:
    FILE_UPLOAD_BUCKET_NAME: ${self:custom.fileBucketName}

plugins:
  - serverless-iam-roles-per-function

custom:
  fileBucketName: varys-file-bucket-${self:provider.stage}

functions:
  insertUrl:
    handler: src/insert_url.handler
    name: insert-url
    description: A lambda handler that inserts a URL into a DynamoDB table based on an API Gateway trigger.
    events:
      - http:
          path: varys/insertbaseurl
          method: POST
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:Put*"
        Resource: arn:aws:s3:::${self:custom.fileBucketName}/*

  getBaseUrl:
    handler: src/get_url.handler
    name: get-base-url
    description: A lambda handler that gets the base URL from a DynamoDB table based on an API Gateway trigger.
    events:
      - http:
          path: varys/getbaseurl
          method: GET
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:Get*"
        Resource: arn:aws:s3:::${self:custom.fileBucketName}/*

resources:
  Resources:
    FileBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.fileBucketName}
        AccessControl: Private
